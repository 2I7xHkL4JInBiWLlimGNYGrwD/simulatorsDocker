/*
 * Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */
package com.oracle.max.vm.ext.graal.nodes;

import com.oracle.graal.api.meta.*;
import com.oracle.graal.nodes.*;
import com.oracle.graal.nodes.spi.*;
import com.oracle.graal.nodes.type.*;


/**
 * The "value" of this node is a {@link FieldActor} object that is generated by the
 * runtime resolution code that this node is lowered to.
 */
public class ResolveFieldNode extends FixedWithNextNode implements Lowerable {

    private JavaField javaField;
    private boolean load;
    private boolean isStatic;

    public ResolveFieldNode(boolean load, JavaField javaField, boolean isStatic) {
        super(StampFactory.forKind(Kind.Object));
        this.load = load;
        this.javaField = javaField;
        this.isStatic = isStatic;
    }

    public JavaField javaField() {
        return javaField;
    }

    public boolean isLoad() {
        return load;
    }

    public boolean isStatic() {
        return isStatic;
    }

    public void lower(LoweringTool tool, LoweringType loweringType) {
        tool.getRuntime().lower(this, tool);
    }

}
