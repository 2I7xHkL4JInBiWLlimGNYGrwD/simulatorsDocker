/*------ MACHINE GENERATED by org.jikesrvm.tools.header_gen.GenerateInterfaceDeclarations.java: DO NOT EDIT------*/

#if defined NEED_BOOT_RECORD_DECLARATIONS || defined NEED_VIRTUAL_MACHINE_DECLARATIONS
#include <inttypes.h>
#define Address uint32_t
#define Offset int32_t
#define Extent uint32_t
#define Word uint32_t
#define JavaObject_t uint32_t
#endif /* NEED_BOOT_RECORD_DECLARATIONS || NEED_VIRTUAL_MACHINE_DECLARATIONS */

#define PORTABLE_NATIVE_SYNC 1

#ifdef NEED_BOOT_RECORD_DECLARATIONS
struct BootRecord {
  uint32_t    headerPadding0;

  uint32_t    headerPadding1;

   Address * heapRanges;
   Address bootImageDataStart;
   Address bootImageDataEnd;
   Address bootImageCodeStart;
   Address bootImageCodeEnd;
   Address bootImageRMapStart;
   Address bootImageRMapEnd;
   Address initialHeapSize;
   Address maximumHeapSize;
   uint32_t verboseBoot;
   uint32_t tiRegister;
   Address spRegister;
   Address ipRegister;
   Address tocRegister;
   uint32_t bootCompleted;
   Address sysJavaVM;
   uint32_t hardwareTrapMethodId;
   Address deliverHardwareExceptionOffset;
   Address dumpStackAndDieOffset;
   Address bootThreadOffset;
   Address debugRequestedOffset;
   uint32_t externalSignalFlag;
   Address sysConsoleWriteCharIP;
   Address sysConsoleWriteIntegerIP;
   Address sysConsoleWriteLongIP;
   Address sysConsoleWriteDoubleIP;
   Address sysExitIP;
   Address sysArgIP;
   Address sysGetenvIP;
   Address sysCopyIP;
   Address sysMallocIP;
   Address sysCallocIP;
   Address sysFreeIP;
   Address sysZeroNTIP;
   Address sysZeroIP;
   Address sysZeroPagesIP;
   Address sysSyncCacheIP;
   Address sysStatIP;
   Address sysReadByteIP;
   Address sysWriteByteIP;
   Address sysReadBytesIP;
   Address sysWriteBytesIP;
   Address sysBytesAvailableIP;
   Address sysSyncFileIP;
   Address sysSetFdCloseOnExecIP;
   Address sysAccessIP;
   Address sysMMapIP;
   Address sysMMapErrnoIP;
   Address sysMProtectIP;
   Address sysGetPageSizeIP;
   Address sysNumProcessorsIP;
   Address sysThreadBindSupportedIP;
   Address sysThreadBindIP;
   Address sysThreadCreateIP;
   Address sysThreadYieldIP;
   Address sysGetThreadIdIP;
   Address sysSetupHardwareTrapHandlerIP;
   Address sysStashVMThreadIP;
   Address sysThreadTerminateIP;
   Address sysMonitorCreateIP;
   Address sysMonitorDestroyIP;
   Address sysMonitorEnterIP;
   Address sysMonitorExitIP;
   Address sysMonitorTimedWaitAbsoluteIP;
   Address sysMonitorWaitIP;
   Address sysMonitorBroadcastIP;
   Address sysLongDivideIP;
   Address sysLongRemainderIP;
   Address sysLongToFloatIP;
   Address sysLongToDoubleIP;
   Address sysFloatToIntIP;
   Address sysDoubleToIntIP;
   Address sysFloatToLongIP;
   Address sysDoubleToLongIP;
   Address sysDoubleRemainderIP;
   Address sysPrimitiveParseFloatIP;
   Address sysPrimitiveParseIntIP;
   Address sysParseMemorySizeIP;
   Address sysCurrentTimeMillisIP;
   Address sysNanoTimeIP;
   Address sysNanoSleepIP;
   Address sysDlopenIP;
   Address sysDlsymIP;
   Address sysCreateThreadSpecificDataKeysIP;
   Address sysVMMathSinIP;
   Address sysVMMathCosIP;
   Address sysVMMathTanIP;
   Address sysVMMathAsinIP;
   Address sysVMMathAcosIP;
   Address sysVMMathAtanIP;
   Address sysVMMathAtan2IP;
   Address sysVMMathCoshIP;
   Address sysVMMathSinhIP;
   Address sysVMMathTanhIP;
   Address sysVMMathExpIP;
   Address sysVMMathLogIP;
   Address sysVMMathSqrtIP;
   Address sysVMMathPowIP;
   Address sysVMMathIEEEremainderIP;
   Address sysVMMathCeilIP;
   Address sysVMMathFloorIP;
   Address sysVMMathRintIP;
   Address sysVMMathCbrtIP;
   Address sysVMMathExpm1IP;
   Address sysVMMathHypotIP;
   Address sysVMMathLog10IP;
   Address sysVMMathLog1pIP;
   Address sysEnableAlignmentCheckingIP;
   Address sysDisableAlignmentCheckingIP;
   Address sysReportAlignmentCheckingIP;
   Address gcspyDriverAddStreamIP;
   Address gcspyDriverEndOutputIP;
   Address gcspyDriverInitIP;
   Address gcspyDriverInitOutputIP;
   Address gcspyDriverResizeIP;
   Address gcspyDriverSetTileNameRangeIP;
   Address gcspyDriverSetTileNameIP;
   Address gcspyDriverSpaceInfoIP;
   Address gcspyDriverStartCommIP;
   Address gcspyDriverStreamIP;
   Address gcspyDriverStreamByteValueIP;
   Address gcspyDriverStreamShortValueIP;
   Address gcspyDriverStreamIntValueIP;
   Address gcspyDriverSummaryIP;
   Address gcspyDriverSummaryValueIP;
   Address gcspyIntWriteControlIP;
   Address gcspyMainServerAddDriverIP;
   Address gcspyMainServerAddEventIP;
   Address gcspyMainServerInitIP;
   Address gcspyMainServerIsConnectedIP;
   Address gcspyMainServerOuterLoopIP;
   Address gcspyMainServerSafepointIP;
   Address gcspyMainServerSetGeneralInfoIP;
   Address gcspyMainServerStartCompensationTimerIP;
   Address gcspyMainServerStopCompensationTimerIP;
   Address gcspyStartserverIP;
   Address gcspyStreamInitIP;
   Address gcspyFormatSizeIP;
   Address gcspySprintfIP;
   Address sysPerfEventInitIP;
   Address sysPerfEventCreateIP;
   Address sysPerfEventEnableIP;
   Address sysPerfEventDisableIP;
   Address sysPerfEventReadIP;
};
#endif /* NEED_BOOT_RECORD_DECLARATIONS */

#ifdef NEED_BOOT_RECORD_INITIALIZATION
extern "C" int sysPerfEventRead();
extern "C" int sysPerfEventDisable();
extern "C" int sysPerfEventEnable();
extern "C" int sysPerfEventCreate();
extern "C" int sysPerfEventInit();
extern "C" int gcspySprintf();
extern "C" int gcspyFormatSize();
extern "C" int gcspyStreamInit();
extern "C" int gcspyStartserver();
extern "C" int gcspyMainServerStopCompensationTimer();
extern "C" int gcspyMainServerStartCompensationTimer();
extern "C" int gcspyMainServerSetGeneralInfo();
extern "C" int gcspyMainServerSafepoint();
extern "C" int gcspyMainServerOuterLoop();
extern "C" int gcspyMainServerIsConnected();
extern "C" int gcspyMainServerInit();
extern "C" int gcspyMainServerAddEvent();
extern "C" int gcspyMainServerAddDriver();
extern "C" int gcspyIntWriteControl();
extern "C" int gcspyDriverSummaryValue();
extern "C" int gcspyDriverSummary();
extern "C" int gcspyDriverStreamIntValue();
extern "C" int gcspyDriverStreamShortValue();
extern "C" int gcspyDriverStreamByteValue();
extern "C" int gcspyDriverStream();
extern "C" int gcspyDriverStartComm();
extern "C" int gcspyDriverSpaceInfo();
extern "C" int gcspyDriverSetTileName();
extern "C" int gcspyDriverSetTileNameRange();
extern "C" int gcspyDriverResize();
extern "C" int gcspyDriverInitOutput();
extern "C" int gcspyDriverInit();
extern "C" int gcspyDriverEndOutput();
extern "C" int gcspyDriverAddStream();
extern "C" int sysReportAlignmentChecking();
extern "C" int sysDisableAlignmentChecking();
extern "C" int sysEnableAlignmentChecking();
extern "C" int sysVMMathLog1p();
extern "C" int sysVMMathLog10();
extern "C" int sysVMMathHypot();
extern "C" int sysVMMathExpm1();
extern "C" int sysVMMathCbrt();
extern "C" int sysVMMathRint();
extern "C" int sysVMMathFloor();
extern "C" int sysVMMathCeil();
extern "C" int sysVMMathIEEEremainder();
extern "C" int sysVMMathPow();
extern "C" int sysVMMathSqrt();
extern "C" int sysVMMathLog();
extern "C" int sysVMMathExp();
extern "C" int sysVMMathTanh();
extern "C" int sysVMMathSinh();
extern "C" int sysVMMathCosh();
extern "C" int sysVMMathAtan2();
extern "C" int sysVMMathAtan();
extern "C" int sysVMMathAcos();
extern "C" int sysVMMathAsin();
extern "C" int sysVMMathTan();
extern "C" int sysVMMathCos();
extern "C" int sysVMMathSin();
extern "C" int sysCreateThreadSpecificDataKeys();
extern "C" int sysDlsym();
extern "C" int sysDlopen();
extern "C" int sysNanoSleep();
extern "C" int sysNanoTime();
extern "C" int sysCurrentTimeMillis();
extern "C" int sysParseMemorySize();
extern "C" int sysPrimitiveParseInt();
extern "C" int sysPrimitiveParseFloat();
extern "C" int sysDoubleRemainder();
extern "C" int sysDoubleToLong();
extern "C" int sysFloatToLong();
extern "C" int sysDoubleToInt();
extern "C" int sysFloatToInt();
extern "C" int sysLongToDouble();
extern "C" int sysLongToFloat();
extern "C" int sysLongRemainder();
extern "C" int sysLongDivide();
extern "C" int sysMonitorBroadcast();
extern "C" int sysMonitorWait();
extern "C" int sysMonitorTimedWaitAbsolute();
extern "C" int sysMonitorExit();
extern "C" int sysMonitorEnter();
extern "C" int sysMonitorDestroy();
extern "C" int sysMonitorCreate();
extern "C" int sysThreadTerminate();
extern "C" int sysStashVMThread();
extern "C" int sysSetupHardwareTrapHandler();
extern "C" int sysGetThreadId();
extern "C" int sysThreadYield();
extern "C" int sysThreadCreate();
extern "C" int sysThreadBind();
extern "C" int sysThreadBindSupported();
extern "C" int sysNumProcessors();
extern "C" int sysGetPageSize();
extern "C" int sysMProtect();
extern "C" int sysMMapErrno();
extern "C" int sysMMap();
extern "C" int sysAccess();
extern "C" int sysSetFdCloseOnExec();
extern "C" int sysSyncFile();
extern "C" int sysBytesAvailable();
extern "C" int sysWriteBytes();
extern "C" int sysReadBytes();
extern "C" int sysWriteByte();
extern "C" int sysReadByte();
extern "C" int sysStat();
extern "C" int sysSyncCache();
extern "C" int sysZeroPages();
extern "C" int sysZero();
extern "C" int sysZeroNT();
extern "C" int sysFree();
extern "C" int sysCalloc();
extern "C" int sysMalloc();
extern "C" int sysCopy();
extern "C" int sysGetenv();
extern "C" int sysArg();
extern "C" int sysExit();
extern "C" int sysConsoleWriteDouble();
extern "C" int sysConsoleWriteLong();
extern "C" int sysConsoleWriteInteger();
extern "C" int sysConsoleWriteChar();
extern struct Java sysJavaVM;
extern "C" void setLinkage(BootRecord* br){
  br->sysPerfEventReadIP = (intptr_t)sysPerfEventRead;
  br->sysPerfEventDisableIP = (intptr_t)sysPerfEventDisable;
  br->sysPerfEventEnableIP = (intptr_t)sysPerfEventEnable;
  br->sysPerfEventCreateIP = (intptr_t)sysPerfEventCreate;
  br->sysPerfEventInitIP = (intptr_t)sysPerfEventInit;
  br->sysReportAlignmentCheckingIP = (intptr_t)sysReportAlignmentChecking;
  br->sysDisableAlignmentCheckingIP = (intptr_t)sysDisableAlignmentChecking;
  br->sysEnableAlignmentCheckingIP = (intptr_t)sysEnableAlignmentChecking;
  br->sysVMMathLog1pIP = (intptr_t)sysVMMathLog1p;
  br->sysVMMathLog10IP = (intptr_t)sysVMMathLog10;
  br->sysVMMathHypotIP = (intptr_t)sysVMMathHypot;
  br->sysVMMathExpm1IP = (intptr_t)sysVMMathExpm1;
  br->sysVMMathCbrtIP = (intptr_t)sysVMMathCbrt;
  br->sysVMMathRintIP = (intptr_t)sysVMMathRint;
  br->sysVMMathFloorIP = (intptr_t)sysVMMathFloor;
  br->sysVMMathCeilIP = (intptr_t)sysVMMathCeil;
  br->sysVMMathIEEEremainderIP = (intptr_t)sysVMMathIEEEremainder;
  br->sysVMMathPowIP = (intptr_t)sysVMMathPow;
  br->sysVMMathSqrtIP = (intptr_t)sysVMMathSqrt;
  br->sysVMMathLogIP = (intptr_t)sysVMMathLog;
  br->sysVMMathExpIP = (intptr_t)sysVMMathExp;
  br->sysVMMathTanhIP = (intptr_t)sysVMMathTanh;
  br->sysVMMathSinhIP = (intptr_t)sysVMMathSinh;
  br->sysVMMathCoshIP = (intptr_t)sysVMMathCosh;
  br->sysVMMathAtan2IP = (intptr_t)sysVMMathAtan2;
  br->sysVMMathAtanIP = (intptr_t)sysVMMathAtan;
  br->sysVMMathAcosIP = (intptr_t)sysVMMathAcos;
  br->sysVMMathAsinIP = (intptr_t)sysVMMathAsin;
  br->sysVMMathTanIP = (intptr_t)sysVMMathTan;
  br->sysVMMathCosIP = (intptr_t)sysVMMathCos;
  br->sysVMMathSinIP = (intptr_t)sysVMMathSin;
  br->sysCreateThreadSpecificDataKeysIP = (intptr_t)sysCreateThreadSpecificDataKeys;
  br->sysDlsymIP = (intptr_t)sysDlsym;
  br->sysDlopenIP = (intptr_t)sysDlopen;
  br->sysNanoSleepIP = (intptr_t)sysNanoSleep;
  br->sysNanoTimeIP = (intptr_t)sysNanoTime;
  br->sysCurrentTimeMillisIP = (intptr_t)sysCurrentTimeMillis;
  br->sysParseMemorySizeIP = (intptr_t)sysParseMemorySize;
  br->sysPrimitiveParseIntIP = (intptr_t)sysPrimitiveParseInt;
  br->sysPrimitiveParseFloatIP = (intptr_t)sysPrimitiveParseFloat;
  br->sysDoubleRemainderIP = (intptr_t)sysDoubleRemainder;
  br->sysDoubleToLongIP = (intptr_t)sysDoubleToLong;
  br->sysFloatToLongIP = (intptr_t)sysFloatToLong;
  br->sysDoubleToIntIP = (intptr_t)sysDoubleToInt;
  br->sysFloatToIntIP = (intptr_t)sysFloatToInt;
  br->sysLongToDoubleIP = (intptr_t)sysLongToDouble;
  br->sysLongToFloatIP = (intptr_t)sysLongToFloat;
  br->sysLongRemainderIP = (intptr_t)sysLongRemainder;
  br->sysLongDivideIP = (intptr_t)sysLongDivide;
  br->sysMonitorBroadcastIP = (intptr_t)sysMonitorBroadcast;
  br->sysMonitorWaitIP = (intptr_t)sysMonitorWait;
  br->sysMonitorTimedWaitAbsoluteIP = (intptr_t)sysMonitorTimedWaitAbsolute;
  br->sysMonitorExitIP = (intptr_t)sysMonitorExit;
  br->sysMonitorEnterIP = (intptr_t)sysMonitorEnter;
  br->sysMonitorDestroyIP = (intptr_t)sysMonitorDestroy;
  br->sysMonitorCreateIP = (intptr_t)sysMonitorCreate;
  br->sysThreadTerminateIP = (intptr_t)sysThreadTerminate;
  br->sysStashVMThreadIP = (intptr_t)sysStashVMThread;
  br->sysSetupHardwareTrapHandlerIP = (intptr_t)sysSetupHardwareTrapHandler;
  br->sysGetThreadIdIP = (intptr_t)sysGetThreadId;
  br->sysThreadYieldIP = (intptr_t)sysThreadYield;
  br->sysThreadCreateIP = (intptr_t)sysThreadCreate;
  br->sysThreadBindIP = (intptr_t)sysThreadBind;
  br->sysThreadBindSupportedIP = (intptr_t)sysThreadBindSupported;
  br->sysNumProcessorsIP = (intptr_t)sysNumProcessors;
  br->sysGetPageSizeIP = (intptr_t)sysGetPageSize;
  br->sysMProtectIP = (intptr_t)sysMProtect;
  br->sysMMapErrnoIP = (intptr_t)sysMMapErrno;
  br->sysMMapIP = (intptr_t)sysMMap;
  br->sysAccessIP = (intptr_t)sysAccess;
  br->sysSetFdCloseOnExecIP = (intptr_t)sysSetFdCloseOnExec;
  br->sysSyncFileIP = (intptr_t)sysSyncFile;
  br->sysBytesAvailableIP = (intptr_t)sysBytesAvailable;
  br->sysWriteBytesIP = (intptr_t)sysWriteBytes;
  br->sysReadBytesIP = (intptr_t)sysReadBytes;
  br->sysWriteByteIP = (intptr_t)sysWriteByte;
  br->sysReadByteIP = (intptr_t)sysReadByte;
  br->sysStatIP = (intptr_t)sysStat;
  br->sysSyncCacheIP = (intptr_t)sysSyncCache;
  br->sysZeroPagesIP = (intptr_t)sysZeroPages;
  br->sysZeroIP = (intptr_t)sysZero;
  br->sysZeroNTIP = (intptr_t)sysZeroNT;
  br->sysFreeIP = (intptr_t)sysFree;
  br->sysCallocIP = (intptr_t)sysCalloc;
  br->sysMallocIP = (intptr_t)sysMalloc;
  br->sysCopyIP = (intptr_t)sysCopy;
  br->sysGetenvIP = (intptr_t)sysGetenv;
  br->sysArgIP = (intptr_t)sysArg;
  br->sysExitIP = (intptr_t)sysExit;
  br->sysConsoleWriteDoubleIP = (intptr_t)sysConsoleWriteDouble;
  br->sysConsoleWriteLongIP = (intptr_t)sysConsoleWriteLong;
  br->sysConsoleWriteIntegerIP = (intptr_t)sysConsoleWriteInteger;
  br->sysConsoleWriteCharIP = (intptr_t)sysConsoleWriteChar;
  br->sysJavaVM = (intptr_t)&sysJavaVM;
}
#endif /* NEED_BOOT_RECORD_INITIALIZATION */

#ifdef NEED_VIRTUAL_MACHINE_DECLARATIONS
static const void *bootImageDataAddress                     = (void*)0x60000000;
static const void *bootImageCodeAddress                     = (void *)0x64000000;
static const void *bootImageRMapAddress                     = (void *)0x67000000;
static const int Constants_STACK_SIZE_GUARD          = 65536;
static const int Constants_INVISIBLE_METHOD_ID       = -1;
static const int ThinLockConstants_TL_THREAD_ID_SHIFT= 10;
static const int Constants_STACKFRAME_HEADER_SIZE    = 12;
static const int Constants_STACKFRAME_METHOD_ID_OFFSET = -4;
static const int Constants_STACKFRAME_FRAME_POINTER_OFFSET    = 0;
const Address Constants_STACKFRAME_SENTINEL_FP             = 0xfffffffe;

const Offset ObjectModel_ARRAY_LENGTH_OFFSET = 0xfffffffc;

static const int Runtime_TRAP_UNKNOWN        = -1;
static const int Runtime_TRAP_NULL_POINTER   = 0;
static const int Runtime_TRAP_ARRAY_BOUNDS   = 1;
static const int Runtime_TRAP_DIVIDE_BY_ZERO = 2;
static const int Runtime_TRAP_STACK_OVERFLOW = 3;
static const int Runtime_TRAP_CHECKCAST      = 4;
static const int Runtime_TRAP_REGENERATE     = 5;
static const int Runtime_TRAP_JNI_STACK     = 6;
static const int Runtime_TRAP_MUST_IMPLEMENT = 7;
static const int Runtime_TRAP_STORE_CHECK = 8;

static const int FileSystem_OPEN_READ                 = 0;
static const int FileSystem_OPEN_WRITE                 = 1;
static const int FileSystem_OPEN_MODIFY                 = 2;
static const int FileSystem_OPEN_APPEND                 = 3;
static const int FileSystem_SEEK_SET                 = 0;
static const int FileSystem_SEEK_CUR                 = 1;
static const int FileSystem_SEEK_END                 = 2;
static const int FileSystem_STAT_EXISTS                 = 0;
static const int FileSystem_STAT_IS_FILE                 = 1;
static const int FileSystem_STAT_IS_DIRECTORY                 = 2;
static const int FileSystem_STAT_IS_READABLE                 = 3;
static const int FileSystem_STAT_IS_WRITABLE                 = 4;
static const int FileSystem_STAT_LAST_MODIFIED                 = 5;
static const int FileSystem_STAT_LENGTH                 = 6;
static const int MMTk_Constants_BYTES_IN_PAGE            = 4096;
const Offset RVMThread_stack_offset = 0x0000004c;
const Offset RVMThread_stackLimit_offset = 0x000000d8;
const Offset RVMThread_exceptionRegisters_offset = 0x00000060;
const Offset RVMThread_jniEnv_offset = 0x00000078;
const Offset RVMThread_execStatus_offset = 0x000000b4;
static const int RVMThread_TERMINATED = 7;
const Offset Registers_gprs_offset = 0xfffffffc;
const Offset Registers_fprs_offset = 0x00000000;
const Offset Registers_ip_offset = 0x0000000c;
const Offset Registers_inuse_offset = 0x00000014;
const Offset JNIEnvironment_JNIExternalFunctions_offset = 0x0000000c;
const Offset Registers_fp_offset = 0x00000010;
static const int Constants_EAX                    = 0;
static const int Constants_ECX                    = 1;
static const int Constants_EDX                    = 2;
static const int Constants_EBX                    = 3;
static const int Constants_ESP                    = 4;
static const int Constants_EBP                    = 5;
static const int Constants_ESI                    = 6;
static const int Constants_EDI                    = 7;
static const int Constants_STACKFRAME_BODY_OFFSET             = -8;
static const int Constants_STACKFRAME_RETURN_ADDRESS_OFFSET   = 4;
static const int Constants_RVM_TRAP_BASE  = 64;
const Offset Thread_framePointer_offset = 0x000000dc;
const Offset Thread_arrayIndexTrapParam_offset = 0x000000e4;
static const int ArchConstants_SSE2 = 1;
#endif /* NEED_VIRTUAL_MACHINE_DECLARATIONS */

#ifdef NEED_EXIT_STATUS_CODES
/* Automatically generated from the exitStatus declarations in ExitStatus.java */
const int EXIT_STATUS_EXECUTABLE_NOT_FOUND                 = 127;
const int EXIT_STATUS_COULD_NOT_EXECUTE                    = 126;
const int EXIT_STATUS_MISC_TROUBLE                         = 122;
const int EXIT_STATUS_IMPOSSIBLE_LIBRARY_FUNCTION_ERROR    = 125;
const int EXIT_STATUS_SYSCALL_TROUBLE                      = 121;
const int EXIT_STATUS_TIMER_TROUBLE                        = 121;
const int EXIT_STATUS_UNSUPPORTED_INTERNAL_OP              = 120;
const int EXIT_STATUS_UNEXPECTED_CALL_TO_SYS               = 120;
const int EXIT_STATUS_DYING_WITH_UNCAUGHT_EXCEPTION        = 113;
const int EXIT_STATUS_BOGUS_COMMAND_LINE_ARG               = 100;
const int EXIT_STATUS_JNI_TROUBLE                          = 98;
const int EXIT_STATUS_BAD_WORKING_DIR                      = 98;
#endif /* NEED_EXIT_STATUS_CODES */

#ifdef NEED_ASSEMBLER_DECLARATIONS
#define TR %ESI;
#endif /* NEED_ASSEMBLER_DECLARATIONS */
#ifdef NEED_MEMORY_MANAGER_DECLARATIONS
#define MAXHEAPS 20
#endif /* NEED_MEMORY_MANAGER_DECLARATIONS */

